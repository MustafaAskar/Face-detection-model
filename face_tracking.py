# -*- coding: utf-8 -*-
"""Face.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1rDrhKNeDEe6ywvJniFX62cKkN7HNy2-d
"""

#import libraries
import tensorflow as tf
#import mtcnn
import numpy as np
import cv2
import copy
import PIL
import pickle

#empty array for cropped faces
faces_cropped=[]

#load trained Caffe model
modelFile = "res10_300x300_ssd_iter_140000.caffemodel"
configFile = "deploy.prototxt.txt"
net = cv2.dnn.readNetFromCaffe(configFile, modelFile)

# define a video capture object
vid = cv2.VideoCapture(0)
  
while(True):
      
    # Capture the video frame
    # by frame
    ret, frame = vid.read()

    #load image
    image_np=np.asarray(frame)
    image_np_copy=copy.deepcopy(image_np)

    #keep the original height and width, Caffe model require resizing to 300*300
    h, w = frame.shape[:2]
    blob = cv2.dnn.blobFromImage(cv2.resize(frame, (300, 300)), 1.0,
    (300, 300), (104.0, 117.0, 123.0))

    #path the image to the model
    net.setInput(blob)

    #extract
    faces = net.forward()

    #crop faces from the image
    for i in range(faces.shape[2]):
            confidence = faces[0, 0, i, 2]
            if confidence > 0.5:
                box = faces[0, 0, i, 3:7] * np.array([w, h, w, h])
                (x, y, x1, y1) = box.astype("int")
                faces_cropped.append(image_np[y:y1,x:x1])
                modified_imag=cv2.rectangle(image_np_copy,(x,y),(x1,y1),(255,0,0),2,)
      
    # Display the resulting frame
    cv2.imshow('frame', modified_imag)
      
    # the 'q' button is set as the
    # quitting button you may use any
    # desired button of your choice
    if cv2.waitKey(1) & 0xFF == ord('q'):
        break
  
# After the loop release the cap object
vid.release()
# Destroy all the windows
cv2.destroyAllWindows()

